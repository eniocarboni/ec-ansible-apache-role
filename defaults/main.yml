---
# defaults file for eniocarboni.apache
# apache_mpm: event | prefork | worker
apache_mpm: event

# apache_extra_packages: list of packages related to web server, like modules (mod_ssl) or utility
#apache_extra_packages:
#  - mod_ssl
apache_extra_packages: []

# apache_modules: list of module where a module is a hash with keys name and state.
#   name value of module is its name without the trailing "_module";
#   state value of module is "absent" to disable and "present" to enable it
#apache_modules:
#  - name: http2
#    state: absent
#  - name: rewrite
#    state: absent
#  - name: ssl
#    state: present
apache_modules: []

# apache_vhost_disable_default: boolean value to disable default vhost (es. on Debian/Ubuntu '000-default.conf') 
apache_vhost_disable_default: true

# apache_listens: list of apache port to listen on (default 80)
#  Insert any valid value for Apache Listen option (see https://httpd.apache.org/docs/2.4/mod/mpm_common.html#listen)
apache_listens:
  - 80
# apache_ssl_listens: list of apache port to listen as SSL on (default 443, for other port use trailing string "https")
#  Insert any valid value for Apache Listen option (see https://httpd.apache.org/docs/2.4/mod/mpm_common.html#listen)
apache_ssl_listens:
  - 443
# apache_virtualhost list of vhost where a vhost is a hash with this meanings:
#    state: if 'present' vhost must be created and enabled while 'absent' the vhost must be disabled and deleted
#    addr: value after virtualhost (<VirtualHost addr >), default to '*:80' ;
#    file_suffix: suffix to add to vhost's filename (ex. "-ssl" or "-port8080")
#      to quickly recognize the "virtualhost" from the file name if "ServerName"
#      is identical but enabled on a different port (example port 80 and 443)
#    ServerName: is the 'ServerName';
#    ServerAlias: is the 'ServerAlias';
#    DocumentRoot: is the 'DocumentRoot';
#    ServerAdmin: is the 'ServerAdmin';
#    Directory_DocumentRoot_default: if true (default) create  a block like this (DocumentRoot: /var/www/html):
#      (see below apache_virtualhost_def_directory_options, apache_virtualhost_def_directory_allowoverride)
#      <Directory "/var/www/html">
#        Options FollowSymLinks
#        AllowOverride All
#      </Directory>
#    use directory_options and directory_allowoverride to override default value
#    For ssl connections the following variables can be entered (sslengine must be 'on' to enable the others):
#    sslengine, sslprotocol, sslciphersuite, sslhonorcipherorder, sslsessiontickets, ssloptions,
#    sslcertificatefile, sslcertificatekeyfile, sslcertificatechainfile
#    sslcertificatefile and sslcertificatekeyfile must exists, 
#    if not use default values autogenerated for localhost:
#      apache_virtualhost_def_sslcertificatefile
#      apache_virtualhost_def_sslcertificatekeyfile
#    ErrorLog: is the 'ErrorLog'  (def. {{ apache_log_dir }}/{ServerName}-errorlog);
#    CustomLog: is the 'CustomLog'(def. {{ apache_log_dir }}/{ServerName}-access:log).
#    Extra: a multiline string of extra options to add to the VirtualHost
#    add_rewrite_rule_to_ssl: if true add the following rules (use ServerName: host.example.com)
#      # use must enable RewriteEngine in 'apache_modules'
#      RewriteEngine on
#      RewriteCond %{SERVER_NAME} =host.example.com
#      RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
#apache_virtualhost:
#  - state: present
#    addr: '*:80'
#    file_suffix: ""
#    ServerName: 'host.example.com'
#    ServerAlias: 'myhost.example.com'
#    DocumentRoot: '/var/www/html'
#    ServerAdmin: 'webmaster@host.example.com'
#    Directory_DocumentRoot_default: true
#    ErrorLog: "{{ apache_log_dir }}/host.example.com-error_log"
#    CustomLog: "{{ apache_log_dir }}/host.example.com-access_log combined"
#    Extra: |-
#      # apache_option1 value1
#        # apache_option2 value2
#        # ...
#        # apache_optionk valuek"
#    add_rewrite_rule_to_ssl: false
#  - state: present
#    addr: '*:443'
#    ServerName: enio.example.com
#    sslengine: 'on'
#    file_suffix: '-ssl'
apache_virtualhost: []

# apache_virtualhost_def_ default variables:
# #########################################

# apache_virtualhost_def_directory_options
apache_virtualhost_def_directory_options: FollowSymLinks

# apache_virtualhost_def_directory_allowoverride
apache_virtualhost_def_directory_allowoverride: All

# apache_virtualhost_def_sslprotocol: default sslprotocol variable if non defined in apache_virtualhost
apache_virtualhost_def_sslprotocol: 'all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1'

# apache_virtualhost_def_sslciphersuite: default sslciphersuite variable if non defined in apache_virtualhost
apache_virtualhost_def_sslciphersuite: 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384'

# apache_virtualhost_def_sslhonorcipherorder: default sslhonorcipherorder variable if non defined in apache_virtualhost
apache_virtualhost_def_sslhonorcipherorder: 'off'

# apache_virtualhost_def_sslsessiontickets: default sslsessiontickets variable if non defined in apache_virtualhost
apache_virtualhost_def_sslsessiontickets: 'off'

# apache_virtualhost_def_ssloptions: default ssloptions variable if non defined in apache_virtualhost
apache_virtualhost_def_ssloptions: '+StrictRequire'

# Other Apache Options
######################

# apache_servertokens: see Apache ServerTokens (https://httpd.apache.org/docs/2.4/mod/core.html#servertokens)
apache_servertokens: Prod

# apache_serversignature: see Apache ServerSignature (https://httpd.apache.org/docs/2.4/mod/core.html#serversignature)
apache_serversignature: 'Off'

# firewall: bool to enable Apache firewall rules only for Ufw or Firewalld
# firewall: true
firewall: false

# firewall_force_install: if true install and active Ufw or Firewalld based on OS
firewall_force_install: false

# firewall_ports: list of firewall rules where each rule use the keys: port,proto,from,to,interface,zone
#  zone key only for firewalld
#  Example: firewalld:
#    firewall_ports:
#      - port: 80
#        proto: tcp
#        zone: public
#      - port: 443
#  Example: Ufw:
#    firewall_ports:
#      - port: "80,443"
#        proto: tcp
firewall_ports: []
